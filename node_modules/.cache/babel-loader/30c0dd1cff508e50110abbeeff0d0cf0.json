{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/astra-netflix/src/components/HeroSection.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HeroSection = () => {\n  _s();\n\n  const [movie, setMovie] = useState(null);\n  const pageState = null;\n\n  const fetchData = async () => {\n    const response = await fetch(\"/.netlify/functions/getMovies\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        genre: \"Sci-Fi\",\n        pageState: pageState\n      })\n    });\n    const responseBody = await response.json();\n    const movies = responseBody.data.movies_by_genre.values;\n    setMovie(movies[Math.floor(Math.random() * movies.length)]);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"hero-video\",\n        muted: true,\n        controls: true,\n        autoPlay: true,\n        loop: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: movie.thumbnail,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"hero-blurb\",\n          children: movie.synopsis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button play\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), \"Play\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button more\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-info-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), \"More info\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(HeroSection, \"7wu+QzjZ74tlUVCwDf4wnQTtbPA=\");\n\n_c = HeroSection;\nexport default HeroSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"sources":["/home/ec2-user/astra-netflix/src/components/HeroSection.js"],"names":["useState","useEffect","HeroSection","movie","setMovie","pageState","fetchData","response","fetch","method","body","JSON","stringify","genre","responseBody","json","movies","data","movies_by_genre","values","Math","floor","random","length","thumbnail","synopsis"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMK,SAAS,GAAG,IAAlB;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AAC5DC,MAAAA,MAAM,EAAE,MADoD;AAE5DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE,QAAT;AAAmBR,QAAAA,SAAS,EAAEA;AAA9B,OAAf;AAFsD,KAAlC,CAA5B;AAIA,UAAMS,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;AACA,UAAMC,MAAM,GAAGF,YAAY,CAACG,IAAb,CAAkBC,eAAlB,CAAkCC,MAAjD;AACAf,IAAAA,QAAQ,CAACY,MAAM,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,MAAM,CAACO,MAAlC,CAAD,CAAP,CAAR;AACD,GARD;;AAUAtB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cACGH,KAAK,iBACJ;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,KAAK,MAAnC;AAAoC,QAAA,QAAQ,MAA5C;AAA6C,QAAA,QAAQ,EAAE,IAAvD;AAA6D,QAAA,IAAI,MAAjE;AAAA,+BACE;AAAQ,UAAA,GAAG,EAAEA,KAAK,CAACqB,SAAnB;AAA8B,UAAA,IAAI,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BrB,KAAK,CAACsB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AA6BD,CA/CD;;GAAMvB,W;;KAAAA,W;AAiDN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst HeroSection = () => {\n  const [movie, setMovie] = useState(null)\n  const pageState = null\n\n  const fetchData = async () => {\n    const response = await fetch(\"/.netlify/functions/getMovies\", {\n      method: \"POST\",\n      body: JSON.stringify({ genre: \"Sci-Fi\", pageState: pageState }),\n    })\n    const responseBody = await response.json()\n    const movies = responseBody.data.movies_by_genre.values\n    setMovie(movies[Math.floor(Math.random() * movies.length)])\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  return (\n    <>\n      {movie && (\n        <div className=\"hero\">\n          <video className=\"hero-video\" muted controls autoPlay={true} loop>\n            <source src={movie.thumbnail} type=\"video/mp4\" />\n          </video>\n\n          <div className=\"info-section\">\n            <h3 className=\"hero-blurb\">{movie.synopsis}</h3>\n            <div className=\"button-section\">\n              <div className=\"button play\">\n                <span>\n                  <i className=\"fas fa-play\"></i>\n                </span>\n                Play\n              </div>\n              <div className=\"button more\">\n                <span>\n                  <i className=\"fas fa-info-circle\"></i>\n                </span>\n                More info\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default HeroSection\n"]},"metadata":{},"sourceType":"module"}